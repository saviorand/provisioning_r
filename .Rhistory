tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[3], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[4], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[5], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[6], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[7], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[8], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[9], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[10], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[11], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[12], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[13], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[14], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[15], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[16], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[17], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[18], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[19], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[20], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[21], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[22], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[23], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[24], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[25], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[26], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[27], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[28], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[29], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[30], sep="")) %>% filter(Country.Code != "")
tempList <- list(wbJoined, importedDF)
wbJoined <- tempList %>% reduce(full_join, by=c('Country.Code', 'Year'))
importedDF <- read.csv(paste(staticPathWB, DataSets[31], sep="")) %>% filter(Country.Code != "")
write.csv(wbJoined, "./Static/wbAndGender.csv")
View(wbJoined)
wbJoinedSorted <- wbJoined %>% arrange(Country.Code, desc(Year))
View(wbJoinedSorted)
wbJoinedSorted <- wbJoined %>% arrange(Country.Code, Year)
View(wbJoinedSorted)
write.csv(wbJoined, "./Static/wbAndGender.csv")
write.csv(wbJoinedSorted, "./Static/wbAndGender.csv")
testDF <- wbJoinedSorted
testDF$ID <- paste(testDF$Year, testDF$Country.Name, sep=" - ")
testDF_indexed <- testDF %>% column_to_rownames(., var = 'ID')
testDF <- wbJoinedSorted %>% select(Country.Name != "")
testDF <- wbJoinedSorted %>% filter(Country.Name != "")
testDF$ID <- paste(testDF$Year, testDF$Country.Name, sep=" - ")
testDF_indexed <- testDF %>% column_to_rownames(., var = 'ID')
var_df <- testDF_indexed %>%
select_if(function(v) var(v, na.rm=TRUE) != 0)
View(var_df)
var_df <- testDF_indexed %>%
select_if(function(v) var(v, na.rm=TRUE) != "..")
View(var_df)
testDF_imputed <- imputePCA(testDF_indexed, ncp=2, maxiter=1000000)
library(missMDA)
testDF_imputed <- imputePCA(testDF_indexed, ncp=2, maxiter=1000000)
var_df <- testDF_indexed[testDF_indexed == ".."] <- NA
var_df <- testDF_indexed
var_df[var_df == ".."] <- NA
View(var_df)
testDF_imputed <- imputePCA(var_df, ncp=2, maxiter=1000000)
typeof(var_df$netmigration)
summary(var_df)
info(var_df)
cols <- names(var_df)[8:30]
print(cols)
cols <- names(var_df)[8:35]
print(cols)
cols <- names(var_df)[8:37]
print(cols)
var_df[cols] <- lapply(var_df[cols], as.numeric)
testDF_imputed <- imputePCA(var_df, ncp=2, maxiter=1000000)
summary(var_df)
cols <- names(var_df)[4:4]
var_df[cols] <- lapply(var_df[cols], as.numeric)
testDF_imputed <- imputePCA(var_df, ncp=2, maxiter=1000000)
summary(var_df)
testDF_toimpute <- var_df %>% select(!c("Country.Name", "Country.Code"))
testDF_imputed <- imputePCA(testDF_toimpute, ncp=2, maxiter=1000000)
testDF_toimpute <- var_df %>% select(!c("Country.Name", "Country.Code"))
testDF_toimpute <- var_df %>% select(!c("Country.Name", "Country.Code", "Year"))
testDF_imputed <- imputePCA(testDF_toimpute, ncp=2, maxiter=1000000)
testDF_PCA <- PCA(testDF_imputed$completeObs)
library(FactoMineR)
testDF_PCA <- PCA(testDF_imputed$completeObs)
Investigate(testDF_PCA, file = "./PCA.Rmd", document = "pdf_document",
parallel = TRUE)
library(FactoInvestigate)
Investigate(testDF_PCA, file = "./PCA.Rmd", document = "pdf_document",
parallel = TRUE)
testDF_filtered <- testDF %>% filter(Year == 2018)
testDF_indexed <- testDF_filtered %>% column_to_rownames(., var = 'ID')
var_df <- testDF_indexed
var_df[var_df == ".."] <- NA
cols <- names(var_df)[4:4]
var_df[cols] <- lapply(var_df[cols], as.numeric)
testDF_toimpute <- var_df %>% select(!c("Country.Name", "Country.Code", "Year"))
testDF_imputed <- imputePCA(testDF_toimpute, ncp=2, maxiter=1000000)
cols <- names(var_df)[5:35]
print(cols)
cols <- names(var_df)[5:36]
print(cols)
cols <- names(var_df)[5:37]
print(cols)
var_df[cols] <- lapply(var_df[cols], as.numeric)
testDF_toimpute <- var_df %>% select(!c("Country.Name", "Country.Code", "Year"))
testDF_imputed <- imputePCA(testDF_toimpute, ncp=2, maxiter=1000000)
View(var_df)
testDF_toimpute <- var_df %>% select(!c("Country.Name", "Country.Code", "Year"))
testDF_imputed <- imputePCA(testDF_toimpute, ncp=2, maxiter=1000000)
testDF_filtered <- testDF %>% filter(Year == 2017)
testDF_indexed <- testDF_filtered %>% column_to_rownames(., var = 'ID')
var_df <- testDF_indexed
var_df[var_df == ".."] <- NA
cols <- names(var_df)[4:37]
var_df[cols] <- lapply(var_df[cols], as.numeric)
testDF_toimpute <- var_df %>% select(!c("Country.Name", "Country.Code", "Year"))
testDF_imputed <- imputePCA(testDF_toimpute, ncp=2, maxiter=1000000)
testDF_toimpute <- var_df %>% select(!c("Country.Name", "Country.Code", "Year")) %>% select_if(function(v) var(v, na.rm=TRUE) != 0)
testDF_imputed <- imputePCA(testDF_toimpute, ncp=2, maxiter=1000000)
testDF_PCA <- PCA(testDF_imputed$completeObs)
Investigate(testDF_PCA, file = "./PCA2017.Rmd", document = "pdf_document",
parallel = TRUE)
?FactoInvestigate
?Investigate
Investigate(testDF_PCA, file = "./PCA2017.Rmd", document = "pdf_document",
parallel = TRUE, Iselec = "contrib")
Investigate(testDF_PCA, file = "./PCA2017.Rmd", document = "pdf_document",
parallel = TRUE, Iselec = "contrib 10")
Investigate(testDF_PCA, file = "./PCA2017.Rmd", document = "pdf_document",
parallel = TRUE, Iselec = "contrib 15")
Investigate(testDF_PCA, file = "./PCA2017.Rmd", document = "pdf_document",
parallel = TRUE, Iselec = "contrib 25")
Investigate(testDF_PCA, file = "./PCA2017.Rmd", document = "pdf_document",
parallel = TRUE, Iselec = "contrib 25", nclust=5)
Investigate(testDF_PCA, file = "./PCA2017.Rmd", document = "pdf_document",
parallel = TRUE, Iselec = "contrib 40", nclust=5)
Investigate(testDF_PCA, file = "./PCA2017.Rmd", document = "pdf_document",
parallel = TRUE, Iselec = "contrib 40", nclust=7)
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(dplyr)
library(tidyverse)
library(missMDA)
library(FactoMineR)
library(FactoInvestigate)
library(Factoshiny)
withWID <- read.csv("./Static/withWID.csv")
wbJoinedSorted <- withWID %>% arrange(Country.Code, Year)
values_worry_cols <- c("WorryGovPrivacy", "WorryWar", "WorryTerrorist", "WorryCivilWar")
values_worry_educ <- "WorryEduc" # only this not excluded
values_conf_cols <- c("ConfCourts", "ConfParties", "ConfCivilService", "ConfGov", "ConfParliament")
values_accept_cols <- c("BeatWife", "Violence", "TaxCheat", "AcceptBribe", "StealProp")
values_member_cols <- c("SelfHelpOrgMember", "ProfOrgMember", "CharityOrgMember", "ConsumOrgMember", "EnvOrgMember")
values_religion_cols <- c("BelieveGod") # Only ChildFaith not excluded
all_values_cols <- c(values_worry_cols, values_conf_cols, values_accept_cols, values_member_cols, values_religion_cols)
## Empirical columns with few observations
few_obs_cols <- c("femalemanager", "informal", "gendergap")
testDF <- wbJoinedSorted %>% select(!c(values_worry_cols, values_conf_cols,values_religion_cols, values_member_cols, few_obs_cols)) %>% filter(Country.Name != "") %>% filter(!Country.Name %in% c("Kuwait", "Oman", "Qatar", "Brunei Darussalam", "Malaysia", "Saudi Arabia", "Iraq", "Bahrain"))
testDF_filtered <- testDF %>% filter(Year == 2018) %>% select(!c("X","X.1","X.2", "X.3", "X.4"))
testDF_indexed <- testDF_filtered %>% column_to_rownames(., var = 'Country.Name')
var_df <- testDF_indexed
var_df[var_df == ".."] <- NA
cols <- names(var_df)[3:59]
var_df$concentration <- gsub(",",".",var_df$concentration)
var_df[cols] <- lapply(var_df[cols], as.numeric)
testDF_toimpute <- var_df %>% select(!c("Country.Code", "Year")) %>% select_if(function(v) var(v, na.rm=TRUE) != 0)
testDF_imputed <- imputePCA(testDF_toimpute, ncp=2, maxiter=1000000)
testDF_PCA <- PCA(testDF_imputed$completeObs, scale.unit = TRUE)
PCAshiny(testDF_PCA)
PCAshiny(testDF_PCA)
Investigate(testDF_PCA, file = "./PCA2015.Rmd", document = "pdf_document",
parallel = TRUE, Iselec = "contrib 120", nclust=12, ellipse=TRUE)
PCAshiny(testDF_PCA)
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(dplyr)
library(tidyverse)
library(missMDA)
library(FactoMineR)
library(FactoInvestigate)
library(Factoshiny)
withWID <- read.csv("./Static/withWID.csv")
incomegroups <- read.csv("./Static/Manual/incomegroup.csv", sep = ";")
incomegroupslist <- list(withWID, incomegroups)
withIncomeGroups <- incomegroupslist %>% reduce(left_join, by=c('Country.Code')) %>% select(!"Country.Name.y") %>% rename(Country.Name = Country.Name.x)
wbJoinedSorted <- withIncomeGroups %>% arrange(Country.Code, Year)
?write.csv
write.csv(wbJoinedSorted, "./withIncomeGroups.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(dplyr)
library(tidyverse)
library(missMDA)
library(FactoMineR)
library(FactoInvestigate)
library(Factoshiny)
#withWID <- read.csv("./Static/withWID.csv")
withIncomeGroups <- read.csv("./withIncomeGroups.csv")
View(withIncomeGroups)
#incomegroups <- read.csv("./Static/Manual/incomegroup.csv", sep = ";")
#incomegroupslist <- list(withWID, incomegroups)
#withIncomeGroups <- incomegroupslist %>% reduce(left_join, by=c('Country.Code')) %>% select(!"Country.Name.y") %>% #rename(Country.Name = Country.Name.x)
outcomes <- read.csv("./Static/Manual/dependentvars/outcomes_full.csv")
#incomegroups <- read.csv("./Static/Manual/incomegroup.csv", sep = ";")
#incomegroupslist <- list(withWID, incomegroups)
#withIncomeGroups <- incomegroupslist %>% reduce(left_join, by=c('Country.Code')) %>% select(!"Country.Name.y") %>% #rename(Country.Name = Country.Name.x)
outcomes <- read.csv("./Static/Manual/dependentvars/outcomes_full.csv", sep=";")
View(outcomes)
outcomes_selected <- outcomese %>% filter(!c("democraticquality", "equality", "employment"))
outcomes_selected <- outcomes %>% filter(!c("democraticquality", "equality", "employment"))
outcomes_selected <- outcomes %>% select(!c("democraticquality", "equality", "employment"))
outcomeslist <- list(withIncomeGroups, outcomes_selected)
withOutcomes <- outcomeslist %>% reduce(left_join, by=c('Country.Code'))
View(withOutcomes)
rm(withOutcomes)
withOutcomes <- outcomeslist %>% reduce(left_join, by=c('Country.Code', 'Year'))
View(withOutcomes)
withOutcomes <- outcomeslist %>% reduce(left_join, by=c('Country.Code', 'Year')) select(!"Country.Name.y") %>% #rename(Country.Name = Country.Name.x)
rm(withOutcomes)
withOutcomes <- outcomeslist %>% reduce(left_join, by=c('Country.Code', 'Year')) select(!"Country.Name.y") %>% #rename(Country.Name = Country.Name.x)
withOutcomes <- outcomeslist %>% reduce(left_join, by=c('Country.Code', 'Year')) %>% select(!"Country.Name.y") %>% #rename(Country.Name = Country.Name.x)
wbJoinedSorted <- withIncomeGroups %>% arrange(Country.Code, Year)
withOutcomes <- outcomeslist %>% reduce(left_join, by=c('Country.Code', 'Year')) %>% select(!"Country.Name.y") %>% rename(Country.Name = Country.Name.x)
View(withOutcomes)
wbJoinedSorted <- withOutcomes %>% arrange(Country.Code, Year)
write.csv(wbJoinedSorted, "./withOutcomes.csv")
values_worry_cols <- c("WorryGovPrivacy", "WorryWar", "WorryTerrorist", "WorryCivilWar")
values_worry_educ <- "WorryEduc" # only this not excluded
values_conf_cols <- c("ConfCourts", "ConfParties", "ConfCivilService", "ConfGov", "ConfParliament")
values_accept_cols <- c("BeatWife", "Violence", "TaxCheat", "AcceptBribe", "StealProp")
values_member_cols <- c("SelfHelpOrgMember", "ProfOrgMember", "CharityOrgMember", "ConsumOrgMember", "EnvOrgMember")
values_religion_cols <- c("BelieveGod")
values_child_faith <- c("ChildFaith")
all_values_cols <- c(values_worry_cols, values_conf_cols, values_accept_cols, values_member_cols, values_religion_cols, values_worry_educ, values_child_faith)
## Empirical columns with few observations
few_obs_cols <- c("femalemanager", "informal", "gendergap")
## Income columns. We control for these by using income groups so safe to remove
income_cols <- c("gdppercap", "gnipercap")
wealth_cols <- c("wealth", "wealthincome")
# testDFComplete <- wbJoinedSorted %>% filter(Country.Name != "")
# testDFSelectedValues <- wbJoinedSorted %>% select(!c(values_worry_cols, values_conf_cols,values_religion_cols, values_member_cols, few_obs_cols)) %>% filter(Country.Name != "")
#testDFNoValuesNoFewObs <- wbJoinedSorted %>% select(!c(all_values_cols, few_obs_cols)) %>% filter(Country.Name != "")
#testDFNoValuesNoFewObsNoIncome <- wbJoinedSorted %>% select(!c(all_values_cols, few_obs_cols, income_cols)) %>% filter(Country.Name != "")
#testDFSelectedValuesNoIncome <- wbJoinedSorted %>% select(!c(values_worry_cols, values_conf_cols,values_religion_cols, values_member_cols, few_obs_cols, income_cols)) %>% filter(Country.Name != "")
testDFWithOutcomesSelectedValuesNoIncome <- wbJoinedSorted %>% select(!c(values_worry_cols, values_conf_cols,values_religion_cols, values_member_cols, few_obs_cols, income_cols)) %>% filter(Country.Name != "")
testDFWithOutcomesSelectedValuesNoIncome <- wbJoinedSorted %>% select(!c(values_worry_cols, values_conf_cols,values_religion_cols, values_member_cols, few_obs_cols, income_cols)) %>% filter(Country.Name != "") %>% select(!c("X","X.1","X.2", "X.3", "X.4"))
#testDF_filtered <- testDFSelectedValuesNoIncome %>% filter(region == "Europe & Central Asia") %>% filter(Year == 2018) %>% select(!c("X","X.1","X.2", "X.3", "X.4"))
testDF_filtered <- testDFWithOutcomesSelectedValuesNoIncome
testDF_indexed <- testDF_filtered %>% column_to_rownames(., var = 'Country.Name')
var_df <- testDF_indexed
var_df <- testDF_filtered
var_df[var_df == ".."] <- NA
View(var_df)
cols <- names(var_df)[3:69]
cols <- names(var_df)[5:69]
var_df$concentration <- gsub(",",".",var_df$concentration)
var_df[cols] <- lapply(var_df[cols], as.numeric)
write.csv(var_df, "./provisioning_0807.csv")
cols <- names(var_df)[5:61, 63:69]
#testDF_filtered <- testDFSelectedValuesNoIncome %>% filter(region == "Europe & Central Asia") %>% filter(Year == 2018) %>% select(!c("X","X.1","X.2", "X.3", "X.4"))
testDF_filtered <- testDFWithOutcomesSelectedValuesNoIncome
var_df <- testDF_filtered %>% select(!c("incomegroup", "region"))
var_df[var_df == ".."] <- NA
cols <- names(var_df)[5:67]
var_df$concentration <- gsub(",",".",var_df$concentration)
var_df[cols] <- lapply(var_df[cols], as.numeric)
incomeGroupAndRegion <- testDF_filtered %>% select(c("incomegroup", "region"))
provisioning <- cbind(var_df, incomeGroupAndRegion)
View(provisioning)
write.csv(provisioning, "./provisioning_0807.csv")
var_df <- testDF_filtered %>% select(!c("incomegroup", "region")) %>% rename(ID = "X.5")
incomeGroupAndRegion <- testDF_filtered %>% select(c("incomegroup", "region"))
var_df[var_df == ".."] <- NA
cols <- names(var_df)[5:67]
var_df$concentration <- gsub(",",".",var_df$concentration)
var_df[cols] <- lapply(var_df[cols], as.numeric)
provisioning <- cbind(var_df, incomeGroupAndRegion)
write.csv(provisioning, "./provisioning_0807.csv")
sort(colSums(is.na(provisioning)))
library(tidyr)
library(dplyr)
library(tidyverse)
library(missMDA)
library(FactoMineR)
library(FactoInvestigate)
library(Factoshiny)
#withWID <- read.csv("./Static/withWID.csv")
#withIncomeGroups <- read.csv("./withIncomeGroups.csv")
#incomegroups <- read.csv("./Static/Manual/incomegroup.csv", sep = ";")
#incomegroupslist <- list(withWID, incomegroups)
#withIncomeGroups <- incomegroupslist %>% reduce(left_join, by=c('Country.Code')) %>% select(!"Country.Name.y") %>% #rename(Country.Name = Country.Name.x)
#outcomes <- read.csv("./Static/Manual/dependentvars/outcomes_full.csv", sep=";")
#outcomes_selected <- outcomes %>% select(!c("democraticquality", "equality", "employment"))
#outcomeslist <- list(withIncomeGroups, outcomes_selected)
#withOutcomes <- outcomeslist %>% reduce(left_join, by=c('Country.Code', 'Year')) %>% select(!"Country.Name.y") %>% rename(Country.Name = Country.Name.x)
withOutcomes <- read.csv("./withOutcomes.csv")
energyuse <- read.csv("./Static/Manual/WB/initial/energyuse.csv")
energyuse <- read.csv("./Static/WB/initial/energyuse.csv")
readAndPivotWB <- function(path, match, sep = ",") {
df <- read.csv(path, sep = sep)
df_year_colnames <- df %>% select(matches(match)) %>% colnames()
df_pivot <- df %>% pivot_longer(cols=df_year_colnames,
names_to='year',
values_to='value')
return(df_pivot)
}
formatWBYears <- function(df) {
dfcopy <- df
dfyears <- dfcopy$year
dfyearsnum <- gsub("\\D+","", dfyears)
dfyearsnumclean <- dfyearsnum %>% substr(1,4)
dfcopy$Year <- as.numeric(dfyearsnumclean)
return(dfcopy)
}
# # PIVOT WB DATA FRAMES
DataSets = "./Static/WB/initial/energyuse.csv"
staticPathWB <- "./Static/WB/"
for (file in DataSets){
print(file)
#assign(toString(file), read.csv(paste(staticPathWBGender, file, sep="")))
df_pivot_output <- readAndPivotWB(paste(staticPathWB, file, sep=""), "X.*")
pivotPath = paste(staticPathWB, "pivoted/", sep="")
write.csv(df_pivot_output, paste(pivotPath, file, sep=""), row.names=FALSE)
}
# # PIVOT WB DATA FRAMES
DataSets = "initial/energyuse.csv"
for (file in DataSets){
print(file)
#assign(toString(file), read.csv(paste(staticPathWBGender, file, sep="")))
df_pivot_output <- readAndPivotWB(paste(staticPathWB, file, sep=""), "X.*")
pivotPath = paste(staticPathWB, "pivoted/", sep="")
write.csv(df_pivot_output, paste(pivotPath, file, sep=""), row.names=FALSE)
}
for (file in DataSets){
print(file)
#assign(toString(file), read.csv(paste(staticPathWBGender, file, sep="")))
df_pivot_output <- readAndPivotWB(paste(staticPathWB, file, sep=""), "X.*")
pivotPath = paste(staticPathWB, "pivoted/", sep="")
write.csv(df_pivot_output, paste(pivotPath, file, sep=""), row.names=FALSE)
}
for (file in DataSets){
#print(file)
#assign(toString(file), read.csv(paste(staticPathWBGender, file, sep="")))
df_pivot_output <- readAndPivotWB(paste(staticPathWB, file, sep=""), "X.*")
pivotPath = paste(staticPathWB, "pivoted/", sep="")
write.csv(df_pivot_output, paste(pivotPath, file, sep=""), row.names=FALSE)
}
for (file in DataSets){
#print(file)
#assign(toString(file), read.csv(paste(staticPathWBGender, file, sep="")))
df_pivot_output <- readAndPivotWB(paste(paste(staticPathWB, "initial/"), file, sep=""), "X.*")
pivotPath = paste(staticPathWB, "pivoted/", sep="")
write.csv(df_pivot_output, paste(pivotPath, file, sep=""), row.names=FALSE)
}
for (file in DataSets){
#print(file)
#assign(toString(file), read.csv(paste(staticPathWBGender, file, sep="")))
df_pivot_output <- readAndPivotWB(paste(paste(staticPathWB, "initial/", sep=""), file, sep=""), "X.*")
pivotPath = paste(staticPathWB, "pivoted/", sep="")
write.csv(df_pivot_output, paste(pivotPath, file, sep=""), row.names=FALSE)
}
for (file in DataSets){
#print(file)
#assign(toString(file), read.csv(paste(staticPathWBGender, file, sep="")))
df_pivot_output <- readAndPivotWB(paste(staticPathWB, file, sep=""), "X.*")
pivotPath = paste(staticPathWB, "pivoted/", sep="")
write.csv(df_pivot_output, paste(pivotPath, file, sep=""), row.names=FALSE)
}
# # PIVOT WB DATA FRAMES
DataSets = "energyuse.csv"
for (file in DataSets){
#print(file)
#assign(toString(file), read.csv(paste(staticPathWBGender, file, sep="")))
df_pivot_output <- readAndPivotWB(paste(staticPathWB, file, sep=""), "X.*")
pivotPath = paste(staticPathWB, "pivoted/", sep="")
write.csv(df_pivot_output, paste(pivotPath, file, sep=""), row.names=FALSE)
}
for (file in DataSets){
#print(file)
#assign(toString(file), read.csv(paste(staticPathWBGender, file, sep="")))
df_pivot_output <- readAndPivotWB(paste(paste(staticPathWB, "initial/", sep=""), file, sep=""), "X.*")
pivotPath = paste(staticPathWB, "pivoted/", sep="")
write.csv(df_pivot_output, paste(pivotPath, file, sep=""), row.names=FALSE)
}
View(df_pivot_output)
staticPathWB <- "./Static/WB/pivoted"
#
# # FORMAT WB DATA FRAMES
#
for (file in DataSets){
if (file != "formatted"){
fileName <- sub('\\.csv$', '', file)
importedDF <- read.csv(paste(staticPathWB, file, sep=""))
formatYearsDF <- formatWBYears(importedDF)
renameYearsDF <- formatYearsDF %>% rename_at('value', ~fileName) %>% select(c("Country.Code", "Year", fileName))
formattedPath <- paste(staticPathWB, "formatted/", sep="")
write.csv(renameYearsDF, paste(formattedPath, file, sep=""), row.names = FALSE)
}
}
staticPathWB <- "./Static/WB/pivoted/"
#
# # FORMAT WB DATA FRAMES
#
for (file in DataSets){
if (file != "formatted"){
fileName <- sub('\\.csv$', '', file)
importedDF <- read.csv(paste(staticPathWB, file, sep=""))
formatYearsDF <- formatWBYears(importedDF)
renameYearsDF <- formatYearsDF %>% rename_at('value', ~fileName) %>% select(c("Country.Code", "Year", fileName))
formattedPath <- paste(staticPathWB, "formatted/", sep="")
write.csv(renameYearsDF, paste(formattedPath, file, sep=""), row.names = FALSE)
}
}
energyuse <- read.csv("./Static/Manual/WB/formatted/energyuse.csv")
energyuse <- read.csv("./Static/Manual/WB/pivoted/formatted/energyuse.csv")
energyuse <- read.csv("./Static/Manual/WB/pivoted/formatted/energyuse.csv")
energyuse <- read.csv("./Static/WB/pivoted/formatted/energyuse.csv")
withEnergyUseList <- list(withOutcomes, energyuse)
View(energyuse)
withEnergyUse <- withEnergyUseList %>% reduce(left_join, by=c('Country.Code', 'Year')) %>% select(!"Country.Name.y") %>% rename(Country.Name = Country.Name.x)
withEnergyUse <- withEnergyUseList %>% reduce(left_join, by=c('Country.Code', 'Year'))
wbJoinedSorted <- withEnergyUse %>% arrange(Country.Code, Year)
values_worry_cols <- c("WorryGovPrivacy", "WorryWar", "WorryTerrorist", "WorryCivilWar")
values_worry_educ <- "WorryEduc" # only this not excluded
values_conf_cols <- c("ConfCourts", "ConfParties", "ConfCivilService", "ConfGov", "ConfParliament")
values_accept_cols <- c("BeatWife", "Violence", "TaxCheat", "AcceptBribe", "StealProp")
values_member_cols <- c("SelfHelpOrgMember", "ProfOrgMember", "CharityOrgMember", "ConsumOrgMember", "EnvOrgMember")
values_religion_cols <- c("BelieveGod")
values_child_faith <- c("ChildFaith")
all_values_cols <- c(values_worry_cols, values_conf_cols, values_accept_cols, values_member_cols, values_religion_cols, values_worry_educ, values_child_faith)
## Empirical columns with few observations
few_obs_cols <- c("femalemanager", "informal", "gendergap")
## Income columns. We control for these by using income groups so safe to remove
income_cols <- c("gdppercap", "gnipercap")
wealth_cols <- c("wealth", "wealthincome")
# testDFComplete <- wbJoinedSorted %>% filter(Country.Name != "")
# testDFSelectedValues <- wbJoinedSorted %>% select(!c(values_worry_cols, values_conf_cols,values_religion_cols, values_member_cols, few_obs_cols)) %>% filter(Country.Name != "")
#testDFNoValuesNoFewObs <- wbJoinedSorted %>% select(!c(all_values_cols, few_obs_cols)) %>% filter(Country.Name != "")
#testDFNoValuesNoFewObsNoIncome <- wbJoinedSorted %>% select(!c(all_values_cols, few_obs_cols, income_cols)) %>% filter(Country.Name != "")
#testDFSelectedValuesNoIncome <- wbJoinedSorted %>% select(!c(values_worry_cols, values_conf_cols,values_religion_cols, values_member_cols, few_obs_cols, income_cols)) %>% filter(Country.Name != "")
testDFWithOutcomesSelectedValuesNoIncome <- wbJoinedSorted %>% select(!c(values_worry_cols, values_conf_cols,values_religion_cols, values_member_cols, few_obs_cols, income_cols)) %>% filter(Country.Name != "") %>% select(!c("X","X.1","X.2", "X.3", "X.4"))
sort(colSums(is.na(provisioning)))
provisioning <- testDFWithOutcomesSelectedValuesNoIncome
sort(colSums(is.na(provisioning)))
#testDF_filtered <- testDFSelectedValuesNoIncome %>% filter(region == "Europe & Central Asia") %>% filter(Year == 2018) %>% select(!c("X","X.1","X.2", "X.3", "X.4"))
testDF_filtered <- provisioning
testDF_indexed <- testDF_filtered %>% column_to_rownames(., var = 'Country.Name')
var_df <- testDF_filtered %>% select(!c("incomegroup", "region")) %>% rename(ID = "X.5")
incomeGroupAndRegion <- testDF_filtered %>% select(c("incomegroup", "region"))
var_df[var_df == ".."] <- NA
cols <- names(var_df)[5:69]
var_df$concentration <- gsub(",",".",var_df$concentration)
var_df[cols] <- lapply(var_df[cols], as.numeric)
provisioning <- cbind(var_df, incomeGroupAndRegion)
write.csv(provisioning, "./provisioning_2307.csv")
ns_tf <- ns_p
